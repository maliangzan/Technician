//
//  MeViewController.m
//  Technician
//
//  Created by 马良赞 on 16/12/26.
//  Copyright © 2016年 马良赞. All rights reserved.
//

#import "MeViewController.h"
#import "WalletViewController.h"
#import "CustomerViewController.h"
#import "SetOrderViewController.h"
#import "NewsViewController.h"
#import "FriendViewController.h"
#import "SetViewController.h"
#import "BaseUserInfoViewController.h"
#import "SYChooseImageHelper.h"
#import "SYActionSheet.h"
#import "SYItemSheet.h"
#import "ProfessionalCertificationViewController.h"
#import "MyEvaluationViewController.h"

#define CELLGEIGHT 45.0*kHeightFactor

@interface MeViewController ()<UITableViewDelegate,UITableViewDataSource>
@property (nonatomic, strong) UITableView *tableView;
@property (nonatomic, strong) UIImageView *headImageView;
@property (nonatomic, strong) UIButton *iconBtn;
@property (nonatomic, strong) UILabel *nameLabel;
@property (nonatomic, strong) UIButton *editInfoBtn;
@property (nonatomic, strong) UILabel *jobNumberLabel;
@property (nonatomic, strong) UILabel *evaluateLabel;
@property (nonatomic, strong) UIButton *ordersBtn;
@property (nonatomic, strong) UIButton *editServiceTimeBtn;
@property (nonatomic, strong) UIView *lineViewOne;
@property (nonatomic, strong) UIView *lineViewTwo;
@property (nonatomic, strong) UIImageView *noticeMsgImgView;
@property (nonatomic, strong) NSArray *cellImageViewArray;
@property (nonatomic, strong) NSArray *cellTitleArray;
@property (nonatomic, strong) NSArray *allVcArray;

@end

@implementation MeViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
}
-(NSArray *)allVcArray{
    if (!_allVcArray) {
        _allVcArray = @[[WalletViewController new],[CustomerViewController new],[SetOrderViewController new],[NewsViewController new],[FriendViewController new],[SetViewController new],];
    }
    return _allVcArray;
}
-(NSArray *)cellImageViewArray{
    if (!_cellImageViewArray) {
        _cellImageViewArray =@[@"leftbar_wallet",@"leftbar_service",@"leftbar_order",@"leftbar_message",@"leftbar_friends",@"leftbar_setting"];
    }
    return _cellImageViewArray;
}
-(NSArray *)cellTitleArray{
    if (!_cellTitleArray) {
        _cellTitleArray = @[@"钱包",@"客服",@"订单",@"消息",@"推荐好友",@"设置"];
    }
    return _cellTitleArray;
}
-(UITableView *)tableView{
    if (!_tableView) {
        _tableView = [[UITableView alloc]initWithFrame:CGRectZero style:UITableViewStyleGrouped];
        _tableView.backgroundColor = kAppColorBackground;
        _tableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
        
        UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, APP_Frame_Width, 15)];
        view.backgroundColor = kAppColorBackground;
        _tableView.tableHeaderView = view;
        _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    }
    return _tableView;
}
-(UIButton *)iconBtn{
    if (!_iconBtn){
        _iconBtn = [[UIButton alloc]init];
        [_iconBtn setBackgroundImage:PNGIMAGE(@"bg_evaluation") forState:UIControlStateNormal];
        [_iconBtn setBackgroundImage:placeh_userAvatar forState:UIControlStateNormal];
        [_iconBtn addTarget:self action:@selector(chooseIcon:) forControlEvents:(UIControlEventTouchUpInside)];

    }
    return _iconBtn;
}
-(UILabel *)nameLabel{
    if (!_nameLabel) {
        _nameLabel = [[UILabel alloc]init];
        _nameLabel.backgroundColor = [UIColor clearColor];
        _nameLabel.textColor = kAppColorTextBlack;
        _nameLabel.font = [UIFont systemFontOfSize:15*kHeightFactor];
        _nameLabel.text = @"木子李";
    }
    return _nameLabel;
}

- (UIButton *)editInfoBtn{
    if (!_editInfoBtn) {
        _editInfoBtn = [UIButton buttonWithType:(UIButtonTypeCustom)];
        [_editInfoBtn setTitle:Localized(@"编辑资料") forState:(UIControlStateNormal)];
        [_editInfoBtn setTitleColor:kAppColorTextMiddleBlack forState:(UIControlStateNormal)];;
        _editInfoBtn.titleLabel.font = [UIFont systemFontOfSize:13];
        _editInfoBtn.titleEdgeInsets = UIEdgeInsetsMake(45 * kHeightFactor, 0, 0, 0);
        _editInfoBtn.titleLabel.textAlignment = NSTextAlignmentLeft;
        [_editInfoBtn addTarget:self action:@selector(editUserInfomation) forControlEvents:(UIControlEventTouchUpInside)];
    }
    return _editInfoBtn;
}

-(UILabel *)jobNumberLabel{
    if (!_jobNumberLabel) {
        _jobNumberLabel = [[UILabel alloc]init];
        _jobNumberLabel.backgroundColor = [UIColor clearColor];
        _jobNumberLabel.textColor = kAppColorTextLightBlack;
        _jobNumberLabel.font = [UIFont systemFontOfSize:12*kHeightFactor];
        _jobNumberLabel.text = @"中医调理师       工号：150301";
        _jobNumberLabel.textAlignment = NSTextAlignmentCenter;
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(professionalCertification)];
        _jobNumberLabel.userInteractionEnabled = YES;
        [_jobNumberLabel addGestureRecognizer:tap];
    }
    return _jobNumberLabel;
}

-(UILabel *)evaluateLabel{
    if (!_evaluateLabel) {
        _evaluateLabel = [[UILabel alloc]init];
        _evaluateLabel.backgroundColor = [UIColor clearColor];
        _evaluateLabel.textColor = kAppColorTextLightBlack;
        _evaluateLabel.font = [UIFont systemFontOfSize:12*kHeightFactor];
        _evaluateLabel.attributedText = [self gettingAttributeString];
        _evaluateLabel.textAlignment = NSTextAlignmentCenter;
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(myEvaluation)];
        _evaluateLabel.userInteractionEnabled = YES;
        [_evaluateLabel addGestureRecognizer:tap];
    }
    return _evaluateLabel;
    
}

-(UIButton *)ordersBtn{
    if (!_ordersBtn) {
        _ordersBtn = [[UIButton alloc]init];
        [_ordersBtn setBackgroundImage:PNGIMAGE(@"bg_OrderStatus") forState:UIControlStateNormal];
        [_ordersBtn setTitle:@"接单中" forState:UIControlStateNormal];
        [_ordersBtn setTitleColor:kAppColorAuxiliaryGreen forState:UIControlStateNormal];
        _ordersBtn.titleLabel.font = [UIFont systemFontOfSize:13 * kWidthFactor];
        [_ordersBtn addTarget:self action:@selector(changeWorkingStadues:) forControlEvents:(UIControlEventTouchUpInside)];
    }
    return _ordersBtn;
}

- (UIButton *)editServiceTimeBtn{
    if (!_editServiceTimeBtn) {
        _editServiceTimeBtn = [UIButton buttonWithType:(UIButtonTypeCustom)];
        [_editServiceTimeBtn setImage:PNGIMAGE(@"btn_edit") forState:(UIControlStateNormal)];
        [_editServiceTimeBtn setTitle:Localized(@"修改服务时间") forState:(UIControlStateNormal)];
        [_editServiceTimeBtn setTitleColor:kAppColorTextMiddleBlack forState:(UIControlStateNormal)];
        _editServiceTimeBtn.imageEdgeInsets = UIEdgeInsetsMake(0, - 6 * kWidthFactor, 0, 0);
        _editServiceTimeBtn.titleLabel.font = [UIFont systemFontOfSize:10 * kWidthFactor];
        _editServiceTimeBtn.titleLabel.textAlignment = NSTextAlignmentLeft;
        [_editServiceTimeBtn addTarget:self action:@selector(editServiceTime) forControlEvents:(UIControlEventTouchUpInside)];
        
    }
    return _editServiceTimeBtn;
}

- (UIView *)lineViewOne{
    if (!_lineViewOne) {
        _lineViewOne = [[UIView alloc] initWithFrame:CGRectMake(0, 0, KscreenWidth, 1)];
        _lineViewOne.backgroundColor = kAppColorLineLightWhite;
    }
    return _lineViewOne;
}

- (UIView *)lineViewTwo{
    if (!_lineViewTwo) {
        _lineViewTwo = [[UIView alloc] initWithFrame:CGRectMake(0, 0, KscreenWidth, 1)];
        _lineViewTwo.backgroundColor = kAppColorLineLightWhite;
    }
    return _lineViewTwo;
}

- (UIImageView *)noticeMsgImgView{
    if (!_noticeMsgImgView) {
        _noticeMsgImgView = [[UIImageView alloc] initWithFrame:CGRectMake(KscreenWidth - 40 * kWidthFactor, CELLGEIGHT / 2 - 5 * kWidthFactor, 10 * kWidthFactor, 10 * kWidthFactor)];
        _noticeMsgImgView.image = PNGIMAGE(@"img_notice");
    }
    return _noticeMsgImgView;
}

-(UIImageView *)headImageView{
    if (!_headImageView) {
        _headImageView = ({
            UIImageView *imageView = [[UIImageView alloc]init];
            imageView.image = PNGIMAGE(@"bg_PersonalCenter");
            imageView;
        });
        [_headImageView addSubview:self.iconBtn];
        [self.iconBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(_headImageView).offset(20*kWidthFactor);
            make.top.equalTo(_headImageView).offset(30*kHeightFactor);
            make.size.mas_equalTo(CGSizeMake(75*kWidthFactor, 75*kHeightFactor));
            
        }];
        
        [_headImageView addSubview:self.nameLabel];
        [self.nameLabel mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(self.iconBtn.mas_right).offset(5*kWidthFactor);
            make.centerY.equalTo(self.iconBtn).offset(-5*kHeightFactor);
            
        }];
        
        [_headImageView addSubview:self.editInfoBtn];
        [self.editInfoBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.left.equalTo(self.nameLabel.mas_left).offset(-14*kWidthFactor);
            make.centerY.equalTo(self.nameLabel).offset( -5 *kHeightFactor);
            make.size.mas_equalTo(CGSizeMake(70 * kWidthFactor, 70 * kHeightFactor));
            
        }];
        
        
        [_headImageView addSubview:self.ordersBtn];
        [self.ordersBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.right.equalTo(_headImageView);
            make.centerY.equalTo(self.iconBtn);
            make.size.mas_equalTo(CGSizeMake(69*kWidthFactor, 23*kHeightFactor));
            
        }];
        
        [_headImageView addSubview:self.editServiceTimeBtn];
        [self.editServiceTimeBtn mas_makeConstraints:^(MASConstraintMaker *make) {
            make.right.equalTo(_headImageView);
            make.centerY.equalTo(self.ordersBtn).offset(20 * kHeightFactor);
            make.size.mas_equalTo(CGSizeMake(85*kWidthFactor, 20*kHeightFactor));
            
        }];
        
        [_headImageView addSubview:self.jobNumberLabel];
        [self.jobNumberLabel mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(self.iconBtn.mas_bottom).offset(20*kWidthFactor);
            make.centerX.equalTo(_headImageView);
            make.left.equalTo(_headImageView.mas_left);
            make.right.equalTo(_headImageView.mas_right);
        }];
        
        [_headImageView addSubview:self.lineViewOne];
        [self.lineViewOne mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(self.iconBtn.mas_bottom).offset(8*kWidthFactor);
            make.left.equalTo(self.headImageView.mas_left);
            make.size.mas_equalTo(CGSizeMake(KscreenWidth * kWidthFactor, 0.5 * kHeightFactor));
            
        }];
        
        [_headImageView addSubview:self.evaluateLabel];
        [self.evaluateLabel mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(self.jobNumberLabel.mas_bottom).offset(20*kWidthFactor);
            make.centerX.equalTo(_headImageView);
            make.left.equalTo(_headImageView.mas_left);
            make.right.equalTo(_headImageView.mas_right);
        }];

        
        [_headImageView addSubview:self.lineViewTwo];
        [self.lineViewTwo mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(self.iconBtn.mas_bottom).offset(45*kWidthFactor);
            make.left.equalTo(self.headImageView.mas_left);
            make.size.mas_equalTo(CGSizeMake(KscreenWidth * kWidthFactor, 0.5 * kHeightFactor));
            
        }];
        
    }
    return _headImageView;
}

#pragma mark Method
-(void)buildUI{
    [super buildUI];
    
    self.headImageView.userInteractionEnabled = YES;
    [self.view addSubview:self.headImageView];
    [self.headImageView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(self.view);
        make.right.equalTo(self.view);
        make.top.equalTo(self.view);
        make.height.mas_equalTo(190*kHeightFactor);
    }];
    
    
    [self.view addSubview:self.tableView];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    [self .tableView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.left.equalTo(self.view);
        make.right.equalTo(self.view);
        make.top.equalTo(self.headImageView.mas_bottom).offset(0);
        make.bottom.equalTo(self.view);
        
    }];
    [self.tableView registerClass:[UITableViewCell class] forCellReuseIdentifier:@"cell"];

    self.iconBtn.imageView.layer.cornerRadius = self.iconBtn.frame.size.width / 2;
    self.iconBtn.imageView.layer.masksToBounds = YES;
    
}


#pragma mark 选择头像
- (void)chooseIcon:(UIButton *)btn{
    SYChooseImageHelper *imageHelper = [SYChooseImageHelper shared];
    imageHelper.allowsEditing = YES;
    
    imageHelper.resultImage = ^(SYChooseImageHelper *helper, NSDictionary *imageInfo){
        
        if (imageInfo) {
            [self changeAvatarWithImage:helper.editedImage];
        }
        [helper close];
    };
    [imageHelper show];
}

- (void)changeAvatarWithImage:(UIImage *)image{
    if (image) {
        [self.iconBtn setImage:image forState:(UIControlStateNormal)];
    }else{
        [self.iconBtn setImage:placeh_userAvatar forState:(UIControlStateNormal)];;
    }
}

#pragma mark 编辑资料
- (void)editUserInfomation{
    BaseUserInfoViewController *userInfoVC = [[BaseUserInfoViewController alloc] init];
    [self.tabBarController.navigationController pushViewController:userInfoVC animated:YES];
}

#pragma mark 修改接单状态
- (void)changeWorkingStadues:(UIButton *)btn{
    WeakSelf;
    SYActionSheet *staduesPicker = [[SYActionSheet alloc] initWithFrame:self.view.bounds];
    staduesPicker.dataArray = [NSMutableArray arrayWithArray:@[@[@"接单中",@"休息中"]]];
    staduesPicker.pickerDone = ^(NSString *selectedStr) {
        [weakself.ordersBtn setTitle:selectedStr forState:(UIControlStateNormal)];
    };
    [self.view addSubview:staduesPicker];
}

#pragma mark 修改服务时间
- (void)editServiceTime{
    WeakSelf;
    SYItemSheet *weekTimePicker = [[SYItemSheet alloc] initWithFrame:self.view.bounds actionType:(ItemActionTypeSelectWeekTime) title:Localized(@"一周工作时间")];
    weekTimePicker.pickerDone = ^(NSString *selectedStr) {

    };
    [self.view addSubview:weekTimePicker];
    
}
#pragma mark 职业认证
- (void)professionalCertification{
    ProfessionalCertificationViewController *professionalCertication = [[ProfessionalCertificationViewController alloc] init];
    [self.navigationController pushViewController:professionalCertication animated:YES];
}
#pragma mark 我的评价
- (void)myEvaluation{
    MyEvaluationViewController *myEva = [[MyEvaluationViewController alloc] init];
    [self.navigationController pushViewController:myEva animated:YES];
}

- (NSMutableAttributedString *)gettingAttributeString{
    NSString *servieceStr = @"669";
    NSString *evaluationStr = @"528";
    NSString *scoreStr = @"5.0";
    NSString *str = [NSString stringWithFormat:@"服务%@次          评价%@条          %@分",servieceStr,evaluationStr,scoreStr];
    NSMutableAttributedString *attrStr = [[NSMutableAttributedString alloc] initWithString:str];
    
    NSTextAttachment *textAttachment = [[NSTextAttachment alloc] initWithData:nil ofType:nil];
    textAttachment.image = PNGIMAGE(@"img_star_orange");; //设置图片
    textAttachment.bounds = CGRectMake(0, 0, 10, 10); //图片范围
    NSAttributedString *textString = [NSAttributedString attributedStringWithAttachment:textAttachment];
    [attrStr insertAttributedString:textString atIndex: 6 + servieceStr.length + evaluationStr.length + 10 * 2];
    
    [attrStr addAttribute:NSForegroundColorAttributeName value:kAppColorAuxiliaryLightOrange range:NSMakeRange(2, servieceStr.length)];
    [attrStr addAttribute:NSForegroundColorAttributeName value:kAppColorAuxiliaryLightOrange range:NSMakeRange(15 + evaluationStr.length, evaluationStr.length)];
    [attrStr addAttribute:NSForegroundColorAttributeName value:kAppColorAuxiliaryLightOrange range:NSMakeRange(attrStr.length - 1 - scoreStr.length, scoreStr.length)];
    return attrStr;
}
#pragma mark UITableViewDelegate, UITableViewDataSource
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    UITableViewCell * cell = [tableView dequeueReusableCellWithIdentifier:@"cell"];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.accessoryType=UITableViewCellAccessoryDisclosureIndicator;
    cell.imageView.image = PNGIMAGE(self.cellImageViewArray[[indexPath row]]);
    cell.textLabel.textColor = kAppColorTextLightBlack;
    cell.textLabel.text = self.cellTitleArray[[indexPath row]];
    //自定义分割线
    UIView *line = [[UIView alloc] initWithFrame:CGRectMake(0, CELLGEIGHT - 1, KscreenWidth, 1)];
    line.backgroundColor = kAppColorBackground;
    [cell addSubview:line];
    
    if (indexPath.row == 3) {
        [cell addSubview:self.noticeMsgImgView];
    }
    
    return cell;
}
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 1;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return [self.cellTitleArray count];
}
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return CELLGEIGHT;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    
    UIViewController *VC = (UIViewController *)[self.allVcArray objectAtIndex:[indexPath row]];
    [self.tabBarController.navigationController pushViewController:VC animated:YES];
}
-(void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath {
    
    if ([cell respondsToSelector:@selector(setSeparatorInset:)]) {
        [cell setSeparatorInset:UIEdgeInsetsZero];
    }
    
    if ([cell respondsToSelector:@selector(setPreservesSuperviewLayoutMargins:)]) {
        [cell setPreservesSuperviewLayoutMargins:NO];
    }
    
    if ([cell respondsToSelector:@selector(setLayoutMargins:)]) {
        [cell setLayoutMargins:UIEdgeInsetsZero];
    }
}


@end
